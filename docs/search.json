[
  {
    "objectID": "posts/week 6/index.html",
    "href": "posts/week 6/index.html",
    "title": "week 6",
    "section": "",
    "text": "tweets <- readRDS(\"ncod_tweets.rds\")"
  },
  {
    "objectID": "posts/week 6/index.html#summarise",
    "href": "posts/week 6/index.html#summarise",
    "title": "week 6",
    "section": "5.2 Summarise",
    "text": "5.2 Summarise\n\nlibrary(tidyverse) #loads dplyr as well\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\nfavourite_summary <- summarise(tweets, # name of the data table\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count))\n\nknitr::kable(favourite_summary) #print output\n\n\n\n\nmean_favs\nmedian_favs\nmin_favs\nmax_favs\n\n\n\n\n29.71732\n3\n0\n22935\n\n\n\n\n\n\nfavourite_summary <- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count),\n                           sd_favs = sd(favorite_count),\n                           mean_RTs = mean(retweet_count),\n                           median_RTs = median(retweet_count),\n                           min_RTs = min(retweet_count),\n                           max_RTs = max(retweet_count),\n                           sd_RTs = sd(favorite_count))\n\nknitr::kable(favourite_summary)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean_favs\nmedian_favs\nmin_favs\nmax_favs\nsd_favs\nmean_RTs\nmedian_RTs\nmin_RTs\nmax_RTs\nsd_RTs\n\n\n\n\n29.71732\n3\n0\n22935\n329.9982\n3.166632\n0\n0\n2525\n329.9982\n\n\n\n\n\nExample of plotting a histogram of the favorite counts, in log scale.\n\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n\n\n\n\nAnother example of adding individual functions to summarise.\n\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(), # count all rows\n            min_date = min(created_at), # find the minimum date\n            max_date = max(created_at)) # find the maximum date\n\nglimpse(tweet_summary)\n\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n\n\nExample of writing inline code.\n\ndate_from <- tweet_summary$min_date %>% \n  format(\"%d %B, %Y\")\ndate_to <- tweet_summary$max_date %>% \n  format(\"%d %B, %Y\")\n\nThere were 28626 tweets between 10 October, 2021 and 12 October, 2021."
  },
  {
    "objectID": "posts/week 6/index.html#pipes",
    "href": "posts/week 6/index.html#pipes",
    "title": "week 6",
    "section": "5.3.2 Pipes",
    "text": "5.3.2 Pipes\nExample of using the pipe operate syntax %>%.\n\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  <chr>           <int>\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23"
  },
  {
    "objectID": "posts/week 6/index.html#counting",
    "href": "posts/week 6/index.html#counting",
    "title": "week 6",
    "section": "5.4 Counting",
    "text": "5.4 Counting\n\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  <chr>           <int>\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23"
  },
  {
    "objectID": "posts/week 6/index.html#grouping",
    "href": "posts/week 6/index.html#grouping",
    "title": "week 6",
    "section": "5.5 Grouping",
    "text": "5.5 Grouping\nTwo ways to use the group_by function.\n\ntweets_grouped <- tweets %>%\n  group_by(verified)\n\nverified <- tweets_grouped %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nknitr::kable(verified)\n\n\n\n\nverified\ncount\nmean_favs\nmean_retweets\n\n\n\n\nFALSE\n26676\n18.40576\n1.825649\n\n\nTRUE\n1950\n184.45949\n21.511282\n\n\n\n\n\n\nverified <- tweets %>%\n  group_by(verified) %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nknitr::kable(verified)\n\n\n\n\nverified\ncount\nmean_favs\nmean_retweets\n\n\n\n\nFALSE\n26676\n18.40576\n1.825649\n\n\nTRUE\n1950\n184.45949\n21.511282"
  }
]