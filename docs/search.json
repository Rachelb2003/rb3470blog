[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The content on this page is from about.qmd. Edit that file to change how this page looks.\n“About” pages are special quarto template pages, with multiple options: https://quarto.org/docs/websites/website-about.html.\nTry changing the template type from jolla to one of the other options for a different look and feel."
  },
  {
    "objectID": "posts/third week/index.html",
    "href": "posts/third week/index.html",
    "title": "week 3",
    "section": "",
    "text": "make a new qmd\n\nBe able to make a new .qmd document\n\nyes. copy a folder, and use copied .qmd\n\nBe able to render a .qmd document\nyes…\n\n\n\nsource vs visual\n\nExplain the difference between the source editor view and visual editor view in Rstudio.\n\nsource view is plain text. visual view renders plain text and interpret as markdown text. shows text formatting instead of plain text.\nbold\n\nBe able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\nwrite some stuff asasas\nitalics bold\nsuperscriptpt2 / subscript2\nsomething3459834\nstrikethrough\nverbatim code\n\nunordered list\n\nsub-item 1\nsub-item 2\n\nsub-sub-item 1\n\n\n\n\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1\n\n\n\n\\(E = mc^{2}\\)\n\nBe aware of resources to help you learn more about markdown options.\nBe able to insert an R code chunk, and show the output in the rendered document.\n\n\nmacro for quick insert\n\noption, compand, i\nwhat does this look like?\n\n1+1\n\n[1] 2\n\n\n\nRunning R code chunks in a qmd\n\n\npressing play\ncopy/paste into console\nhighlight then command-enter (mac)\nprecedence issues (first to last)\n\n\nBe aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n\n\n\n\nBe able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\nYes. Use execute in top-level yml, chunk options have precedence over global options.\n\nWrite inline r code.\n\n2\n\na <- 54\nb <- 100\nc <- a+b\n\nThe value of c is 154.\n\nExplain how the rendering environment is different from the Rstudio environment.\n\n\nc <- a+b\nc\n\n[1] 154\n\n\n\nBe aware of more advanced quarto options for html documents, and try some of the options."
  },
  {
    "objectID": "posts/third/index.html",
    "href": "posts/third/index.html",
    "title": "Test",
    "section": "",
    "text": "test post"
  },
  {
    "objectID": "posts/coding tips/index.html",
    "href": "posts/coding tips/index.html",
    "title": "coding tips",
    "section": "",
    "text": "How to commit and push changes to github?\n\nMake some changes to your files\nRender your website in Rstudio\nCommit your changes in github desktop with a commit message\nPush to github.com"
  },
  {
    "objectID": "posts/coding tips/index.html#restarting-r",
    "href": "posts/coding tips/index.html#restarting-r",
    "title": "coding tips",
    "section": "restarting R",
    "text": "restarting R\nsession –> restart R\ncmd-shift-f10\ntype .rs.restartR() in the console. THIS DID NOT WORK PROPERLY, the environment workspace did clear using this method."
  },
  {
    "objectID": "posts/coding tips/index.html#changing-the-picture-for-a-post",
    "href": "posts/coding tips/index.html#changing-the-picture-for-a-post",
    "title": "coding tips",
    "section": "changing the picture for a post",
    "text": "changing the picture for a post\nquarto blogs will display a picture in the listing of posts\n\nput a picture file (e.g.,jpg,png,gif) inside the folder for the post.\nlink to the picture with image: parameter in the .qmd yaml at the top of the document\n\nthe yaml for this document looks like:\n\ntitle: “my tip sheet for week 2” author: “rachel babadzhanov” image: “images/cover.jpg” ___"
  },
  {
    "objectID": "posts/coding tips/index.html#install.packages-tidyverse",
    "href": "posts/coding tips/index.html#install.packages-tidyverse",
    "title": "coding tips",
    "section": "install.packages (“tidyverse”)",
    "text": "install.packages (“tidyverse”)\ninstalling packages into ‘C:/users/staff/Documents/R/win-library/4.1’ (as ‘lib’ is unspecified) trying URL ‘https://cran.rstudio.com/bin/windows/contrib/4.1/tidyverse_1.3.2.zip’\nthe main repository where packages reside is called CRAN"
  },
  {
    "objectID": "posts/coding tips/index.html#difference-between-installing-a-package-aznd-loading-a-package",
    "href": "posts/coding tips/index.html#difference-between-installing-a-package-aznd-loading-a-package",
    "title": "coding tips",
    "section": "difference between installing a package aznd loading a package",
    "text": "difference between installing a package aznd loading a package\n\ninstall.packages(). it will be available but not loaded every time you open up R.\n\n** never install a package from inside a scrip. only from console pane or the packages tab of the lower right pane.\nloading a package is done using the library() function. (aka. lauching an app)\nrun the function using beep()\nif a package isn’t loaded, use ?package_name::function_name"
  },
  {
    "objectID": "posts/coding tips/index.html#themes-and-accessibility",
    "href": "posts/coding tips/index.html#themes-and-accessibility",
    "title": "coding tips",
    "section": "themes and accessibility",
    "text": "themes and accessibility\nused to change the font, size, and general appearance of R studio\n\ngo to tools\nthen global options\nthen appearance\n\nmore tips to come"
  },
  {
    "objectID": "posts/midterm part 2/index.html",
    "href": "posts/midterm part 2/index.html",
    "title": "midterm part 2",
    "section": "",
    "text": "easier problems:\nproblem 1: Do simple math with numbers, addition, subtraction, multiplication, division\n\n3 + 4\n\n[1] 7\n\n7 - 4\n\n[1] 3\n\n2 * 5\n\n[1] 10\n\n10 / 2\n\n[1] 5\n\n\nproblem 2: Put numbers into variables, do simple math on the variables\n\na <- 1\nb <- 456\nc <- 23423\n\na+b+c\n\n[1] 23880\n\na+b\n\n[1] 457\n\na*c\n\n[1] 23423\n\n\nproblem 3: Write code that will place the numbers 1 to 100 separately into a variable using for loop. Then, again using the seq function.\n\na <- 1:100\n\na <- seq(from = 1, to = 100, by = 1)\n\na <- seq(1,100,1)\n\na <- seq(to=100, from=1, by=1)\n\n# start with null\n# grow the vector\nb <- c()\n\nfor (i in 1:100) {\n  b <- c(b,i)\n}\n\n# start with empty vector of 100 0s\n\nd <- rep (0,100)\n\nd[1] <- 1\nd[2] <- 2\nd[3] <- 3\n\nfor (i in 1:100){\n  d[i] <- i\n}\n\ne <- rep(0,100)\n\nfor (i in 1:1000){\n  if (i <= 100) e[i] <- i\n}\n\n\nFind the sum of all the integer numbers from 1 to 100.\n\n\n1:100\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\nsum(1:100)\n\n[1] 5050\n\na <- 1:100\n\nmy_sum <- 0\n\nfor (i in a) {\n  my_sum <- my_sum +i\n  print(my_sum)\n}\n\n[1] 1\n[1] 3\n[1] 6\n[1] 10\n[1] 15\n[1] 21\n[1] 28\n[1] 36\n[1] 45\n[1] 55\n[1] 66\n[1] 78\n[1] 91\n[1] 105\n[1] 120\n[1] 136\n[1] 153\n[1] 171\n[1] 190\n[1] 210\n[1] 231\n[1] 253\n[1] 276\n[1] 300\n[1] 325\n[1] 351\n[1] 378\n[1] 406\n[1] 435\n[1] 465\n[1] 496\n[1] 528\n[1] 561\n[1] 595\n[1] 630\n[1] 666\n[1] 703\n[1] 741\n[1] 780\n[1] 820\n[1] 861\n[1] 903\n[1] 946\n[1] 990\n[1] 1035\n[1] 1081\n[1] 1128\n[1] 1176\n[1] 1225\n[1] 1275\n[1] 1326\n[1] 1378\n[1] 1431\n[1] 1485\n[1] 1540\n[1] 1596\n[1] 1653\n[1] 1711\n[1] 1770\n[1] 1830\n[1] 1891\n[1] 1953\n[1] 2016\n[1] 2080\n[1] 2145\n[1] 2211\n[1] 2278\n[1] 2346\n[1] 2415\n[1] 2485\n[1] 2556\n[1] 2628\n[1] 2701\n[1] 2775\n[1] 2850\n[1] 2926\n[1] 3003\n[1] 3081\n[1] 3160\n[1] 3240\n[1] 3321\n[1] 3403\n[1] 3486\n[1] 3570\n[1] 3655\n[1] 3741\n[1] 3828\n[1] 3916\n[1] 4005\n[1] 4095\n[1] 4186\n[1] 4278\n[1] 4371\n[1] 4465\n[1] 4560\n[1] 4656\n[1] 4753\n[1] 4851\n[1] 4950\n[1] 5050\n\n\n\nmy_sum <- function(my_numbers){\n  the_sum <- 0\n  for(i in my_numbers){\n    the_sum <- the_sum+i\n  }\n  return(the_sum)\n}\n\nmy_sum(1:100)\n\n[1] 5050\n\nmy_sum(1:10)\n\n[1] 55\n\nmy_sum(1:1000)\n\n[1] 500500\n\n\n\nWrite a function to find the sum of all integers between any two values.\n\n\nmy_sum_range <- function(min, max){\n  \n  my_numbers <- min:max\n  the_sum    <- 0\n  for(i in my_numbers){\n    the_sum <- the_sum+i\n  }\n  return(the_sum)\n}\n\nmy_sum_range(min = 1, max= 3)\n\n[1] 6\n\nmy_sum_range(min =1, max= 100)\n\n[1] 5050\n\n#\n\nmy_sum_rangeB <- function(min, max){\n  \n  my_numbers <- seq(from= min,to = max, by = 1)\n  the_sum    <- 0\n  for(i in my_numbers){\n    the_sum <- the_sum+i\n  }\n  return(the_sum)\n}\n\nmy_sum_rangeB(min = 1, max= 3)\n\n[1] 6\n\nmy_sum_rangeB(min =1, max= 100)\n\n[1] 5050\n\n####\n\nmy_sum_rangeC <- function(min, max){\n  \n  my_numbers <- seq(from= min,to = max, by = 1)\n  the_sum    <- 0\n  for(i in my_numbers){\n    the_sum <- the_sum+i\n  }\n  return(list(sum = the_sum,\n              vector = my_numbers))\n}\n\nmy_sum_rangeC(min = 1, max= 3)\n\n$sum\n[1] 6\n\n$vector\n[1] 1 2 3\n\nmy_sum_rangeC(min =1, max= 100)\n\n$sum\n[1] 5050\n\n$vector\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n\n\nList all of the odd numbers from 1 to 100.\n\n\n1:100\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\nseq(1,100,2)\n\n [1]  1  3  5  7  9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49\n[26] 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99\n\na <- 1:100\n\nfor (i in a){\n  if(i%%2 == 1){\n    print(i)\n  }\n}\n\n[1] 1\n[1] 3\n[1] 5\n[1] 7\n[1] 9\n[1] 11\n[1] 13\n[1] 15\n[1] 17\n[1] 19\n[1] 21\n[1] 23\n[1] 25\n[1] 27\n[1] 29\n[1] 31\n[1] 33\n[1] 35\n[1] 37\n[1] 39\n[1] 41\n[1] 43\n[1] 45\n[1] 47\n[1] 49\n[1] 51\n[1] 53\n[1] 55\n[1] 57\n[1] 59\n[1] 61\n[1] 63\n[1] 65\n[1] 67\n[1] 69\n[1] 71\n[1] 73\n[1] 75\n[1] 77\n[1] 79\n[1] 81\n[1] 83\n[1] 85\n[1] 87\n[1] 89\n[1] 91\n[1] 93\n[1] 95\n[1] 97\n[1] 99\n\n##\n\na <- 1:100\n\nfor (i in a){\n  if(i%%2 == 1) print(i)\n}\n\n[1] 1\n[1] 3\n[1] 5\n[1] 7\n[1] 9\n[1] 11\n[1] 13\n[1] 15\n[1] 17\n[1] 19\n[1] 21\n[1] 23\n[1] 25\n[1] 27\n[1] 29\n[1] 31\n[1] 33\n[1] 35\n[1] 37\n[1] 39\n[1] 41\n[1] 43\n[1] 45\n[1] 47\n[1] 49\n[1] 51\n[1] 53\n[1] 55\n[1] 57\n[1] 59\n[1] 61\n[1] 63\n[1] 65\n[1] 67\n[1] 69\n[1] 71\n[1] 73\n[1] 75\n[1] 77\n[1] 79\n[1] 81\n[1] 83\n[1] 85\n[1] 87\n[1] 89\n[1] 91\n[1] 93\n[1] 95\n[1] 97\n[1] 99\n\n## logical indexing\n\na <- 1:100\n\na[a%%2 == 1]\n\n [1]  1  3  5  7  9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49\n[26] 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99\n\n\n\nList all of the odd numbers from 1 to 100.\n\n\na <- 1:100\n\nis_odd <- function(x){\n  if(x%%2 == 1) {\n    TRUE\n  }else{\n    FALSE\n  }\n}\n\nfor(i in a){\n  if( is_odd(i) == TRUE ) print(i)\n}\n\n[1] 1\n[1] 3\n[1] 5\n[1] 7\n[1] 9\n[1] 11\n[1] 13\n[1] 15\n[1] 17\n[1] 19\n[1] 21\n[1] 23\n[1] 25\n[1] 27\n[1] 29\n[1] 31\n[1] 33\n[1] 35\n[1] 37\n[1] 39\n[1] 41\n[1] 43\n[1] 45\n[1] 47\n[1] 49\n[1] 51\n[1] 53\n[1] 55\n[1] 57\n[1] 59\n[1] 61\n[1] 63\n[1] 65\n[1] 67\n[1] 69\n[1] 71\n[1] 73\n[1] 75\n[1] 77\n[1] 79\n[1] 81\n[1] 83\n[1] 85\n[1] 87\n[1] 89\n[1] 91\n[1] 93\n[1] 95\n[1] 97\n[1] 99\n\n\n\na <- 1:1000\n\nisprime <- function(x){\n  generate_sequence <- 1:x\n  counter <- 0\n  for(i in generate_sequence){\n    if(x%%i == 0){\n      counter <- counter+1\n    }\n  }\n  \n  if(counter <= 2) {\n    return(TRUE)\n  } else{\n    return(FALSE)\n  }\n}\n\nfor(i in a){\n  if(isprime(i) == TRUE) print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 5\n[1] 7\n[1] 11\n[1] 13\n[1] 17\n[1] 19\n[1] 23\n[1] 29\n[1] 31\n[1] 37\n[1] 41\n[1] 43\n[1] 47\n[1] 53\n[1] 59\n[1] 61\n[1] 67\n[1] 71\n[1] 73\n[1] 79\n[1] 83\n[1] 89\n[1] 97\n[1] 101\n[1] 103\n[1] 107\n[1] 109\n[1] 113\n[1] 127\n[1] 131\n[1] 137\n[1] 139\n[1] 149\n[1] 151\n[1] 157\n[1] 163\n[1] 167\n[1] 173\n[1] 179\n[1] 181\n[1] 191\n[1] 193\n[1] 197\n[1] 199\n[1] 211\n[1] 223\n[1] 227\n[1] 229\n[1] 233\n[1] 239\n[1] 241\n[1] 251\n[1] 257\n[1] 263\n[1] 269\n[1] 271\n[1] 277\n[1] 281\n[1] 283\n[1] 293\n[1] 307\n[1] 311\n[1] 313\n[1] 317\n[1] 331\n[1] 337\n[1] 347\n[1] 349\n[1] 353\n[1] 359\n[1] 367\n[1] 373\n[1] 379\n[1] 383\n[1] 389\n[1] 397\n[1] 401\n[1] 409\n[1] 419\n[1] 421\n[1] 431\n[1] 433\n[1] 439\n[1] 443\n[1] 449\n[1] 457\n[1] 461\n[1] 463\n[1] 467\n[1] 479\n[1] 487\n[1] 491\n[1] 499\n[1] 503\n[1] 509\n[1] 521\n[1] 523\n[1] 541\n[1] 547\n[1] 557\n[1] 563\n[1] 569\n[1] 571\n[1] 577\n[1] 587\n[1] 593\n[1] 599\n[1] 601\n[1] 607\n[1] 613\n[1] 617\n[1] 619\n[1] 631\n[1] 641\n[1] 643\n[1] 647\n[1] 653\n[1] 659\n[1] 661\n[1] 673\n[1] 677\n[1] 683\n[1] 691\n[1] 701\n[1] 709\n[1] 719\n[1] 727\n[1] 733\n[1] 739\n[1] 743\n[1] 751\n[1] 757\n[1] 761\n[1] 769\n[1] 773\n[1] 787\n[1] 797\n[1] 809\n[1] 811\n[1] 821\n[1] 823\n[1] 827\n[1] 829\n[1] 839\n[1] 853\n[1] 857\n[1] 859\n[1] 863\n[1] 877\n[1] 881\n[1] 883\n[1] 887\n[1] 907\n[1] 911\n[1] 919\n[1] 929\n[1] 937\n[1] 941\n[1] 947\n[1] 953\n[1] 967\n[1] 971\n[1] 977\n[1] 983\n[1] 991\n[1] 997\n\n#######\n\nis_prime_B <- function(x){\n  generate_sequence <- 1:x\n  counter <- 0\n  for(i in generate_sequence){\n    if(x%%i == 0){\n      counter <- counter+1\n    }\n  }\n  \n  if(counter <= 2) {\n    prime <- TRUE\n  } else{\n    prime <- FALSE\n  }\n  \n  return(c(x,counter,prime))\n}\n\nprime_table <- data.frame()\n\nfor(i in a){\n  prime_table <- rbind( prime_table, is_prime_B(i))\n}\n\nnames(prime_table) <- c(\"number\",\"count\",\"prime\")\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nprime_table %>%\n  filter(prime == 1) %>%\n  select(number)\n\n    number\n1        1\n2        2\n3        3\n4        5\n5        7\n6       11\n7       13\n8       17\n9       19\n10      23\n11      29\n12      31\n13      37\n14      41\n15      43\n16      47\n17      53\n18      59\n19      61\n20      67\n21      71\n22      73\n23      79\n24      83\n25      89\n26      97\n27     101\n28     103\n29     107\n30     109\n31     113\n32     127\n33     131\n34     137\n35     139\n36     149\n37     151\n38     157\n39     163\n40     167\n41     173\n42     179\n43     181\n44     191\n45     193\n46     197\n47     199\n48     211\n49     223\n50     227\n51     229\n52     233\n53     239\n54     241\n55     251\n56     257\n57     263\n58     269\n59     271\n60     277\n61     281\n62     283\n63     293\n64     307\n65     311\n66     313\n67     317\n68     331\n69     337\n70     347\n71     349\n72     353\n73     359\n74     367\n75     373\n76     379\n77     383\n78     389\n79     397\n80     401\n81     409\n82     419\n83     421\n84     431\n85     433\n86     439\n87     443\n88     449\n89     457\n90     461\n91     463\n92     467\n93     479\n94     487\n95     491\n96     499\n97     503\n98     509\n99     521\n100    523\n101    541\n102    547\n103    557\n104    563\n105    569\n106    571\n107    577\n108    587\n109    593\n110    599\n111    601\n112    607\n113    613\n114    617\n115    619\n116    631\n117    641\n118    643\n119    647\n120    653\n121    659\n122    661\n123    673\n124    677\n125    683\n126    691\n127    701\n128    709\n129    719\n130    727\n131    733\n132    739\n133    743\n134    751\n135    757\n136    761\n137    769\n138    773\n139    787\n140    797\n141    809\n142    811\n143    821\n144    823\n145    827\n146    829\n147    839\n148    853\n149    857\n150    859\n151    863\n152    877\n153    881\n154    883\n155    887\n156    907\n157    911\n158    919\n159    929\n160    937\n161    941\n162    947\n163    953\n164    967\n165    971\n166    977\n167    983\n168    991\n169    997\n\n\n#harder problems\n\nList the numbers from 1 to 100 with the following constraints. If the number can be divided by three evenly, then print Fizz instead of the number. If the number can be divided by five evenly, then print Buzz instead of the number. Finally, if the number can be divided by three and five evenly, then print FizzBuzz instead of the number. The answer could look something like this:\n\n\nfor (i in 1:100) {\n  if (i %% 3 == 0 & i %% 5 == 0) {\n    print(\"FizzBuzz\")\n  } else if (i %% 3 == 0) {\n    print(\"Fizz\")\n  } else if (i %% 5 == 0) {\n    print(\"Buzz\")\n  } else {\n    print(i)\n  }\n}\n\n[1] 1\n[1] 2\n[1] \"Fizz\"\n[1] 4\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 7\n[1] 8\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 11\n[1] \"Fizz\"\n[1] 13\n[1] 14\n[1] \"FizzBuzz\"\n[1] 16\n[1] 17\n[1] \"Fizz\"\n[1] 19\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 22\n[1] 23\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 26\n[1] \"Fizz\"\n[1] 28\n[1] 29\n[1] \"FizzBuzz\"\n[1] 31\n[1] 32\n[1] \"Fizz\"\n[1] 34\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 37\n[1] 38\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 41\n[1] \"Fizz\"\n[1] 43\n[1] 44\n[1] \"FizzBuzz\"\n[1] 46\n[1] 47\n[1] \"Fizz\"\n[1] 49\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 52\n[1] 53\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 56\n[1] \"Fizz\"\n[1] 58\n[1] 59\n[1] \"FizzBuzz\"\n[1] 61\n[1] 62\n[1] \"Fizz\"\n[1] 64\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 67\n[1] 68\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 71\n[1] \"Fizz\"\n[1] 73\n[1] 74\n[1] \"FizzBuzz\"\n[1] 76\n[1] 77\n[1] \"Fizz\"\n[1] 79\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 82\n[1] 83\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 86\n[1] \"Fizz\"\n[1] 88\n[1] 89\n[1] \"FizzBuzz\"\n[1] 91\n[1] 92\n[1] \"Fizz\"\n[1] 94\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 97\n[1] 98\n[1] \"Fizz\"\n[1] \"Buzz\"\n\n\n\nGenerate a matrix for a multiplication table. For example, the labels for the columns could be the numbers 1 to 10, and the labels for the rows could be the numbers 1 to 10. The contents of each of the cells in the matrix should be correct answer for multiplying the column value by the row value.\n\n\nnumbers <- 1:10\n\nmultiplication_table <- matrix(0, nrow = 10, ncol = 10)\n\ncolnames(multiplication_table) <- numbers\nrownames(multiplication_table) <- numbers\n\n# Loop through each row and column index and assign the product to the corresponding cell in the matrix\nfor (i in numbers) {\n  for (j in numbers) {\n    multiplication_table[i, j] <- i * j\n  }\n}\n\n# Print the multiplication table\nmultiplication_table\n\n    1  2  3  4  5  6  7  8  9  10\n1   1  2  3  4  5  6  7  8  9  10\n2   2  4  6  8 10 12 14 16 18  20\n3   3  6  9 12 15 18 21 24 27  30\n4   4  8 12 16 20 24 28 32 36  40\n5   5 10 15 20 25 30 35 40 45  50\n6   6 12 18 24 30 36 42 48 54  60\n7   7 14 21 28 35 42 49 56 63  70\n8   8 16 24 32 40 48 56 64 72  80\n9   9 18 27 36 45 54 63 72 81  90\n10 10 20 30 40 50 60 70 80 90 100"
  },
  {
    "objectID": "posts/UntitledQMD.html",
    "href": "posts/UntitledQMD.html",
    "title": "quartoCourseBlog",
    "section": "",
    "text": "install.packages(“rmarkdown”)"
  },
  {
    "objectID": "posts/week 6/index.html",
    "href": "posts/week 6/index.html",
    "title": "week 6",
    "section": "",
    "text": "tweets <- readRDS(\"ncod_tweets.rds\")"
  },
  {
    "objectID": "posts/week 6/index.html#summarise",
    "href": "posts/week 6/index.html#summarise",
    "title": "week 6",
    "section": "5.2 Summarise",
    "text": "5.2 Summarise\n\nlibrary(tidyverse) #loads dplyr as well\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\nfavourite_summary <- summarise(tweets, # name of the data table\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count))\n\nknitr::kable(favourite_summary) #print output\n\n\n\n\nmean_favs\nmedian_favs\nmin_favs\nmax_favs\n\n\n\n\n29.71732\n3\n0\n22935\n\n\n\n\n\n\nfavourite_summary <- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count),\n                           sd_favs = sd(favorite_count),\n                           mean_RTs = mean(retweet_count),\n                           median_RTs = median(retweet_count),\n                           min_RTs = min(retweet_count),\n                           max_RTs = max(retweet_count),\n                           sd_RTs = sd(favorite_count))\n\nknitr::kable(favourite_summary)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean_favs\nmedian_favs\nmin_favs\nmax_favs\nsd_favs\nmean_RTs\nmedian_RTs\nmin_RTs\nmax_RTs\nsd_RTs\n\n\n\n\n29.71732\n3\n0\n22935\n329.9982\n3.166632\n0\n0\n2525\n329.9982\n\n\n\n\n\nExample of plotting a histogram of the favorite counts, in log scale.\n\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n\n\n\n\nAnother example of adding individual functions to summarise.\n\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(), # count all rows\n            min_date = min(created_at), # find the minimum date\n            max_date = max(created_at)) # find the maximum date\n\nglimpse(tweet_summary)\n\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n\n\nExample of writing inline code.\n\ndate_from <- tweet_summary$min_date %>% \n  format(\"%d %B, %Y\")\ndate_to <- tweet_summary$max_date %>% \n  format(\"%d %B, %Y\")\n\nThere were 28626 tweets between 10 October, 2021 and 12 October, 2021."
  },
  {
    "objectID": "posts/week 6/index.html#pipes",
    "href": "posts/week 6/index.html#pipes",
    "title": "week 6",
    "section": "5.3.2 Pipes",
    "text": "5.3.2 Pipes\nExample of using the pipe operate syntax %>%.\n\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  <chr>           <int>\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23"
  },
  {
    "objectID": "posts/week 6/index.html#counting",
    "href": "posts/week 6/index.html#counting",
    "title": "week 6",
    "section": "5.4 Counting",
    "text": "5.4 Counting\n\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  <chr>           <int>\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23"
  },
  {
    "objectID": "posts/week 6/index.html#grouping",
    "href": "posts/week 6/index.html#grouping",
    "title": "week 6",
    "section": "5.5 Grouping",
    "text": "5.5 Grouping\nTwo ways to use the group_by function.\n\ntweets_grouped <- tweets %>%\n  group_by(verified)\n\nverified <- tweets_grouped %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nknitr::kable(verified)\n\n\n\n\nverified\ncount\nmean_favs\nmean_retweets\n\n\n\n\nFALSE\n26676\n18.40576\n1.825649\n\n\nTRUE\n1950\n184.45949\n21.511282\n\n\n\n\n\n\nverified <- tweets %>%\n  group_by(verified) %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nknitr::kable(verified)\n\n\n\n\nverified\ncount\nmean_favs\nmean_retweets\n\n\n\n\nFALSE\n26676\n18.40576\n1.825649\n\n\nTRUE\n1950\n184.45949\n21.511282"
  },
  {
    "objectID": "posts/Example_assignment/index.html",
    "href": "posts/Example_assignment/index.html",
    "title": "Example assignment",
    "section": "",
    "text": "This assignment engages you in the process of introspection. Your task is to use introspection to evaluate and describe your own mental imagery abilities. Attempt to answer the following kinds of questions. What is your mental imagery like? Do you have mental imagery for different kinds of senses? Is your mental imagery vivid and life-like or very different from normal perception? How would you describe your mental imagery?\nYou should write a minimum of 250 words, but feel free to write more. Submit your document on blackboard by the due date."
  },
  {
    "objectID": "posts/Example_assignment/index.html#my-mental-imagery",
    "href": "posts/Example_assignment/index.html#my-mental-imagery",
    "title": "Example assignment",
    "section": "My mental imagery",
    "text": "My mental imagery\nMy mental imagery is like…"
  },
  {
    "objectID": "posts/week 4/index.html",
    "href": "posts/week 4/index.html",
    "title": "week 4",
    "section": "",
    "text": "#loads ggplot2, and some example data sets\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\nstarwars_copy <- starwars\n\n# check out some of the datatypes\nhead(starwars_copy)\n\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 <NA>    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n6 Owen Lars       178   120 brown,… light   blue       52   male  mascu… Tatooi…\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nclass(starwars_copy$name)\n\n[1] \"character\"\n\nclass(starwars_copy$height)\n\n[1] \"integer\"\n\nclass(starwars_copy$mass)\n\n[1] \"numeric\"\n\nclass(starwars_copy$homeworld)\n\n[1] \"character\"\n\n# plot some variables\nggplot(data = starwars_copy,\n       mapping = aes(x=height,y=mass) )+\n  geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/week 4/index.html#data-types",
    "href": "posts/week 4/index.html#data-types",
    "title": "week 4",
    "section": "Data Types",
    "text": "Data Types\n\n# assign 1 to object named a\na <- 1\n1 -> b\nf <- 4 -> g\n\n\n# look at the data type of object in a\nclass(a)\n\n[1] \"numeric\"\n\ntypeof(a)\n\n[1] \"double\"\n\n\n\nintegers\n\n#integers (no decimals)\n# L specifies integer\ntypeof(1L) \n\n[1] \"integer\"\n\nclass(1L)\n\n[1] \"integer\"\n\nis.integer(1L)\n\n[1] TRUE\n\nas.integer(1.1) # coerces to integer\n\n[1] 1\n\nas.integer(1.5) # rounds down\n\n[1] 1\n\nas.integer(1.9) # rounds down\n\n[1] 1\n\ninteger(length = 5) #initialize a vector for integers\n\n[1] 0 0 0 0 0\n\nis.integer(as.integer(1:5))\n\n[1] TRUE\n\n\n\n\nnumeric/doubles\n\n# decimal numbers\n# numbers without decimals default to numeric\ntypeof(1) \n\n[1] \"double\"\n\nclass(1)\n\n[1] \"numeric\"\n\nis.numeric(1)\n\n[1] TRUE\n\nas.numeric(1L) # coerces integer to numeric\n\n[1] 1\n\nnumeric(length = 5) #initialize a vector for doubles\n\n[1] 0 0 0 0 0\n\n\n\n\nLogical/Boolean\nUppercase TRUE, or FALSE makes logical (binary) variables\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\nclass(TRUE)\n\n[1] \"logical\"\n\nis.logical(FALSE)\n\n[1] TRUE\n\nas.logical(1) # coerces 1 to TRUE\n\n[1] TRUE\n\nas.logical(0) # coerces 0  to FALSE\n\n[1] FALSE\n\nlogical(length = 5) # initialize a logical vector\n\n[1] FALSE FALSE FALSE FALSE FALSE\n\n\n\n\ndata.frame\nA table with rows and columns.\n\nmy_df <- data.frame(a = 1:5,\n                    b = c(\"one\",\"two\",\"three\",\"four\",\"five\"),\n                    random = runif(5,0,1))\n#print to see it\nmy_df\n\n  a     b     random\n1 1   one 0.20792526\n2 2   two 0.44115041\n3 3 three 0.03034016\n4 4  four 0.28440697\n5 5  five 0.93514933\n\n# access columns with $\nmy_df$a == 1:5\n\n[1] TRUE TRUE TRUE TRUE TRUE\n\nmy_df$b\n\n[1] \"one\"   \"two\"   \"three\" \"four\"  \"five\" \n\n## access rows or columns with [row,column]\nmy_df[1,] # row 1, all columns\n\n  a   b    random\n1 1 one 0.2079253\n\nmy_df[,1] # column 1, all rows\n\n[1] 1 2 3 4 5\n\nmy_df[1:2,] # rows 1 to 2, all columns\n\n  a   b    random\n1 1 one 0.2079253\n2 2 two 0.4411504\n\nmy_df[1:2, 3] # rows 1 to 2, but only for column 3\n\n[1] 0.2079253 0.4411504\n\n\n\n\nTibble\nA table with rows and columns.\n\nmy_df <- tibble(a = 1:5,\n                    b = c(\"one\",\"two\",\"three\",\"four\",\"five\"),\n                    random = runif(5,0,1))\n#print to see it\nmy_df\n\n# A tibble: 5 × 3\n      a b     random\n  <int> <chr>  <dbl>\n1     1 one    0.305\n2     2 two    0.241\n3     3 three  0.194\n4     4 four   0.297\n5     5 five   0.551\n\n# access columns with $\nmy_df$a\n\n[1] 1 2 3 4 5\n\nmy_df$b\n\n[1] \"one\"   \"two\"   \"three\" \"four\"  \"five\" \n\n## access rows or columns with [row,column]\nmy_df[1,] # row 1, all columns\n\n# A tibble: 1 × 3\n      a b     random\n  <int> <chr>  <dbl>\n1     1 one    0.305\n\nmy_df[,1] # column 1, all rows\n\n# A tibble: 5 × 1\n      a\n  <int>\n1     1\n2     2\n3     3\n4     4\n5     5\n\nmy_df[1:2,] # rows 1 to 2, all columns\n\n# A tibble: 2 × 3\n      a b     random\n  <int> <chr>  <dbl>\n1     1 one    0.305\n2     2 two    0.241\n\nmy_df[1:2, 3] # rows 1 to 2, but only for column 3\n\n# A tibble: 2 × 1\n  random\n   <dbl>\n1  0.305\n2  0.241\n\nmy_df\n\n# A tibble: 5 × 3\n      a b     random\n  <int> <chr>  <dbl>\n1     1 one    0.305\n2     2 two    0.241\n3     3 three  0.194\n4     4 four   0.297\n5     5 five   0.551"
  },
  {
    "objectID": "posts/week 4/index.html#ggplot2",
    "href": "posts/week 4/index.html#ggplot2",
    "title": "week 4",
    "section": "ggplot2",
    "text": "ggplot2\n\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\")\n\nRows: 707 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): caller_id, employee_id, issue_category\ndbl  (3): wait_time, call_time, satisfaction\ndttm (1): call_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(survey_data)\n\n# A tibble: 6 × 7\n  caller_id employee_id call_start          wait_time call_time issue_…¹ satis…²\n  <chr>     <chr>       <dttm>                  <dbl>     <dbl> <chr>      <dbl>\n1 C001      E01         2020-09-22 10:47:54       169        34 tech           3\n2 C002      E01         2020-09-07 22:10:25       206        52 tech           2\n3 C003      E01         2020-07-06 12:08:59       207        41 tech           2\n4 C004      E01         2020-02-20 13:12:03       132        16 tech           4\n5 C005      E01         2020-11-08 17:42:10       178        20 returns        3\n6 C006      E01         2020-06-01 19:06:12       230        46 returns        2\n# … with abbreviated variable names ¹​issue_category, ²​satisfaction\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nggplot()\n\n\n\nggplot(data = survey_data,\n       mapping = aes(x = wait_time,\n                     y = satisfaction)\n       )\n\n\n\nggplot(survey_data, aes(x = wait_time, y = satisfaction))\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction)) + \n  geom_point()\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction)) + \n  geom_point(color=\"red\")\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction)) + \n  geom_point(color=\"black\", size = 5) +\n   geom_point(color=\"#fa2fcb\", size = 4) +\n  geom_smooth(method =\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction,\n           color = wait_time,\n           size = satisfaction)) + \n  geom_point()\n\n\n\nmin(survey_data$wait_time)\n\n[1] 23\n\nmax(survey_data$wait_time)\n\n[1] 314\n\nlength(survey_data$wait_time)\n\n[1] 707\n\nggplot(data=survey_data, mapping= aes(x=wait_time))+\n  geom_histogram(bins=50, color=\"red\") +\n  theme_classic()"
  },
  {
    "objectID": "posts/week 5/index.html",
    "href": "posts/week 5/index.html",
    "title": "week 5",
    "section": "",
    "text": "Load libraries\n\nlibrary(tidyverse)     # includes readr & tibble\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\nlibrary(googlesheets4) # for Google Sheets\n\n\n\nOptions for viewing data\n\ndata(cars) # make data from R package available in global environment\n#View(cars) # view in editor pane\n#print(cars) # print to console\n#cars # print to console\n\n# show columns as rows\nglimpse(cars)\n\nRows: 50\nColumns: 2\n$ speed <dbl> 4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13…\n$ dist  <dbl> 2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34…\n\n#show first 10 lines of table\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\n# print nicely to web\nknitr::kable(head(cars))\n\n\n\n\nspeed\ndist\n\n\n\n\n4\n2\n\n\n4\n10\n\n\n7\n4\n\n\n7\n22\n\n\n8\n16\n\n\n9\n10\n\n\n\n\n\n\n\nProduce summaries\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\n\nlibrary(summarytools)\n\nWarning in fun(libname, pkgname): couldn't connect to display \":0\"\n\n\nsystem might not have X11 capabilities; in case of errors when using dfSummary(), set st_options(use.x11 = FALSE)\n\n\n\nAttaching package: 'summarytools'\n\n\nThe following object is masked from 'package:tibble':\n\n    view\n\n#view(dfSummary(starwars))\n\n\n\nImporting data\n\nlibrary(rio)\n\ndemo_tsv <- import(file = \"demo.tsv\")\n\nglimpse(demo_tsv)\n\nRows: 6\nColumns: 6\n$ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    <chr> \"high\", \"low\", \"med\", \"high\", \"low\", \"med\"\n$ integer   <int> 1, 2, 3, 4, 5, 6\n$ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      <IDate> 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\ndemo_tsv$factor <- as.factor(demo_tsv$factor)\n\nglimpse(demo_tsv)\n\nRows: 6\nColumns: 6\n$ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    <fct> high, low, med, high, low, med\n$ integer   <int> 1, 2, 3, 4, 5, 6\n$ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      <IDate> 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\ndemo_tsv$\ndemo_tsv$factor\n\nNULL\n\n\n\ndemo_tsv  <- import(\"demo.tsv\")  # tab-separated values\ndemo_csv  <- import(\"demo.csv\")  # comma-separated values\ndemo_xls  <- import(\"demo.xlsx\") # Excel format\ndemo_sav  <- import(\"demo.sav\")  # SPSS format\n\n\ngs4_deauth() # skip authorisation for public data\n\ndemo_gs4  <- googlesheets4::read_sheet(\n  ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\"\n)\n\n✔ Reading from \"demo\".\n\n\n✔ Range 'Sheet1'.\n\ngs4_get(ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\")\n\nSpreadsheet name: demo\n              ID: 16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\n          Locale: en_US\n       Time zone: Europe/London\n     # of sheets: 1\n\n(Sheet name): (Nominal extent in rows x columns)\n      Sheet1: 1000 x 26\n\n\n\ndemo <- readr::read_csv(\"demo.csv\")\n\nRows: 6 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): character, factor\ndbl  (2): integer, double\nlgl  (1): logical\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nspec(demo)\n\ncols(\n  character = col_character(),\n  factor = col_character(),\n  integer = col_double(),\n  double = col_double(),\n  logical = col_logical(),\n  date = col_date(format = \"\")\n)\n\ncorrected_cols <- cols(\n  character = col_character(),\n  factor = col_factor(levels = c(\"low\", \"med\", \"high\")),\n  integer = col_integer(),\n  double = col_double(),\n  logical = col_logical(),\n  date = col_date(format = \"%Y-%m-%d\")\n)\n\ndemo <- readr::read_csv(\"demo.csv\", col_types = corrected_cols)\n\nglimpse(demo)\n\nRows: 6\nColumns: 6\n$ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    <fct> high, low, med, high, low, med\n$ integer   <int> 1, 2, 3, 4, 5, 6\n$ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      <date> 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\n\n\n\nWrite your own data\n\navatar <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE,\n  numbers = c(1,2,3),\n  more_numbers = 1:3,\n  even_more = seq(1,3,1)\n)\n\n# print it\navatar\n\n# A tibble: 3 × 6\n  name   bends friendly numbers more_numbers even_more\n  <chr>  <chr> <lgl>      <dbl>        <int>     <dbl>\n1 Katara water TRUE           1            1         1\n2 Toph   earth TRUE           2            2         2\n3 Sokka  <NA>  TRUE           3            3         3\n\n\n\navatar_by_row <- tribble(\n  ~name,    ~bends,  ~friendly, ~numbers,\n  \"Katara\", \"water\", TRUE, 1L,\n  \"Toph\",   \"earth\", TRUE, 2L,\n  \"Sokka\",  NA,      TRUE, 3L\n)\navatar_by_row\n\n# A tibble: 3 × 4\n  name   bends friendly numbers\n  <chr>  <chr> <lgl>      <int>\n1 Katara water TRUE           1\n2 Toph   earth TRUE           2\n3 Sokka  <NA>  TRUE           3\n\n\n\n\nExport data\n\nexport(avatar, \"avatar.csv\")"
  },
  {
    "objectID": "posts/my_first_post/index.html",
    "href": "posts/my_first_post/index.html",
    "title": "My First post",
    "section": "",
    "text": "This is an example first post. Whatever you write here will appear inside your post.\nIt is possible to write lists:\nAnd make headers"
  },
  {
    "objectID": "posts/my_first_post/index.html#this-is-a-second-level-heading",
    "href": "posts/my_first_post/index.html#this-is-a-second-level-heading",
    "title": "My First post",
    "section": "This is a second level heading",
    "text": "This is a second level heading\nYou can include images, and many other kinds of content.\nIf you are using the visual editor in Rstudio you can drag images onto the editor to insert them into the document. Otherwise, you need to place the image inside of the folder for this post, and then you can insert it to your post directly, like this:\n\nThe first image in a blog post will also be used on the listings page."
  },
  {
    "objectID": "posts/week 8/index.html",
    "href": "posts/week 8/index.html",
    "title": "week 8",
    "section": "",
    "text": "#data relations"
  },
  {
    "objectID": "posts/week 8/index.html#what-doers-dplyr-mutate-do",
    "href": "posts/week 8/index.html#what-doers-dplyr-mutate-do",
    "title": "week 8",
    "section": "what doers dplyr mutate do?",
    "text": "what doers dplyr mutate do?\n\norders_B <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n# add a new column\norders_B %>%\n  mutate(satisfaction = NA)\n\n# A tibble: 9 × 3\n     id items satisfaction\n  <dbl> <dbl> <lgl>       \n1     2    10 NA          \n2     3    18 NA          \n3     4    21 NA          \n4     4    23 NA          \n5     5     9 NA          \n6     5    11 NA          \n7     6    11 NA          \n8     6    12 NA          \n9     7     3 NA          \n\n# add mutiplie new column\norders_B %>%\n  mutate(satisfaction = NA,\n         numbers = 1:9)\n\n# A tibble: 9 × 4\n     id items satisfaction numbers\n  <dbl> <dbl> <lgl>          <int>\n1     2    10 NA                 1\n2     3    18 NA                 2\n3     4    21 NA                 3\n4     4    23 NA                 4\n5     5     9 NA                 5\n6     5    11 NA                 6\n7     6    11 NA                 7\n8     6    12 NA                 8\n9     7     3 NA                 9\n\n# assign back to tibble\norders_B <- orders_B %>%\n              mutate(satisfaction = NA,\n                     numbers = 1:9)\norders_B %>%\n  mutate(numbers_as_strings = as.character(numbers))\n\n# A tibble: 9 × 5\n     id items satisfaction numbers numbers_as_strings\n  <dbl> <dbl> <lgl>          <int> <chr>             \n1     2    10 NA                 1 1                 \n2     3    18 NA                 2 2                 \n3     4    21 NA                 3 3                 \n4     4    23 NA                 4 4                 \n5     5     9 NA                 5 5                 \n6     5    11 NA                 6 6                 \n7     6    11 NA                 7 7                 \n8     6    12 NA                 8 8                 \n9     7     3 NA                 9 9                 \n\norders_B %>%\n  mutate(items_minus_id = items - id)\n\n# A tibble: 9 × 5\n     id items satisfaction numbers items_minus_id\n  <dbl> <dbl> <lgl>          <int>          <dbl>\n1     2    10 NA                 1              8\n2     3    18 NA                 2             15\n3     4    21 NA                 3             17\n4     4    23 NA                 4             19\n5     5     9 NA                 5              4\n6     5    11 NA                 6              6\n7     6    11 NA                 7              5\n8     6    12 NA                 8              6\n9     7     3 NA                 9             -4"
  },
  {
    "objectID": "posts/week 8/index.html#dplyr-filter",
    "href": "posts/week 8/index.html#dplyr-filter",
    "title": "week 8",
    "section": "Dplyr filter",
    "text": "Dplyr filter\n\nfull_data <- full_join(customers, orders, by = \"id\")\n\nWarning in full_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n\nfull_data\n\n# A tibble: 10 × 4\n      id city       postcode items\n   <dbl> <chr>      <chr>    <dbl>\n 1     1 Port Ellen PA42 7DU    NA\n 2     2 Dufftown   AB55 4DH    10\n 3     3 <NA>       <NA>        18\n 4     4 Aberlour   AB38 7RY    21\n 5     4 Aberlour   AB38 7RY    23\n 6     5 Tobermory  PA75 6NR     9\n 7     5 Tobermory  PA75 6NR    11\n 8     6 <NA>       <NA>        11\n 9     6 <NA>       <NA>        12\n10     7 <NA>       <NA>         3\n\nfull_data %>%\n  filter(items > 10)\n\n# A tibble: 6 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     3 <NA>      <NA>        18\n2     4 Aberlour  AB38 7RY    21\n3     4 Aberlour  AB38 7RY    23\n4     5 Tobermory PA75 6NR    11\n5     6 <NA>      <NA>        11\n6     6 <NA>      <NA>        12\n\nfull_data %>%\n  filter(postcode == \"AB38 7RY\")\n\n# A tibble: 2 × 4\n     id city     postcode items\n  <dbl> <chr>    <chr>    <dbl>\n1     4 Aberlour AB38 7RY    21\n2     4 Aberlour AB38 7RY    23\n\nfull_data %>%\n  filter(postcode == \"AB38 7RY\" & items > 21)\n\n# A tibble: 1 × 4\n     id city     postcode items\n  <dbl> <chr>    <chr>    <dbl>\n1     4 Aberlour AB38 7RY    23\n\nfull_data %>%\n  filter(postcode == \"AB38 7RY\",\n         items > 21)\n\n# A tibble: 1 × 4\n     id city     postcode items\n  <dbl> <chr>    <chr>    <dbl>\n1     4 Aberlour AB38 7RY    23\n\nfull_data %>%\n  filter(city != \"Aberlour\")\n\n# A tibble: 4 × 4\n     id city       postcode items\n  <dbl> <chr>      <chr>    <dbl>\n1     1 Port Ellen PA42 7DU    NA\n2     2 Dufftown   AB55 4DH    10\n3     5 Tobermory  PA75 6NR     9\n4     5 Tobermory  PA75 6NR    11\n\nfull_data %>%\n  filter( is.na(city) == FALSE,\n          is.na(items) == FALSE)\n\n# A tibble: 5 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     2 Dufftown  AB55 4DH    10\n2     4 Aberlour  AB38 7RY    21\n3     4 Aberlour  AB38 7RY    23\n4     5 Tobermory PA75 6NR     9\n5     5 Tobermory PA75 6NR    11\n\nfull_data %>%\n  filter( is.na(city) == TRUE | is.na(items) == TRUE)\n\n# A tibble: 5 × 4\n     id city       postcode items\n  <dbl> <chr>      <chr>    <dbl>\n1     1 Port Ellen PA42 7DU    NA\n2     3 <NA>       <NA>        18\n3     6 <NA>       <NA>        11\n4     6 <NA>       <NA>        12\n5     7 <NA>       <NA>         3"
  },
  {
    "objectID": "posts/week 7/index.html",
    "href": "posts/week 7/index.html",
    "title": "week 7",
    "section": "",
    "text": "##Make vectors before, then tibble, then GGPLOT\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\ngrades <- c(2.5, 8, 4)\nstudents <- c(\"A\" , \"B\", \"C\")\nstudent_performance <- tibble(grades, students)\n\n# alternate Syntax\n\nstudent_performance2 <- tibble(\n  grades = c(2.5, 8, 4),\n  students =c(\"A\",\"B\",\"C\")\n \n)\n#this has a Y limiter\nggplot(data=student_performance, aes(x=students, y=grades))+\n  geom_bar(stat= \"identity\", fill = \"white\" , color = \"blue\")+\n  scale_y_continuous(breaks = 0:10,limits = c(0,10))+\n  theme_classic(base_size = 12) +\n  geom_text(label = grades, position = position_dodge(width =.9) , vjust = .001)+\n  xlab(\"Students\")+\n  ylab(\"Grades\")+\n  ggtitle(\"Student Performance\")\n\n\n\n\n\nfactor_one <- rep(rep(as.factor(c(\"A\", \"B\", \"C\")), 2), 2)\nfactor_two <- rep(rep(as.factor(c(\"IIA\", \"IIB\")), 3), 2)\nfactor_three <- rep(as.factor(c(\"IIIA\", \"IIIB\")), each = 6)\ndv_means <- c(20, 30, 40, 20, 40, 40,\n            10, 20, 50, 50, 10, 10)\ndv_SEs   <- c(4, 3.4, 4, 3, 2, 4,\n            1, 2, 1, 2, 3, 2)\nplot_df <- data.frame(factor_one,\n                    factor_two,\n                    factor_three,\n                    dv_means,\n                    dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df,\n    aes(\n        x = factor_one,\n        y = dv_means,\n        group = factor_two,\n        fill = factor_two\n    )) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap( ~ factor_three)\n\n\n\n\n\nstudies <- rep(c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"), each=3)\nlikely <- rep(c(\"Women More Likely\",\n            \"Equally Likely\",\n            \"Man more Likely\"),4)\n\npp <- c(0,90,10,\n        5,60,35,\n        2,40,58,\n        5,60,35)/100\n\nplot_df <- data.frame(pp,studies,likely)\n\nplot_df$likely <- factor(plot_df$likely, \n                         levels = c(\"Women More Likely\",\n                                    \"Equally Likely\",\n                                    \"Man more Likely\"))\n\nplot_df$studies <- factor(plot_df$studies, \n                         levels = c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"))\n\nggplot(plot_df, aes(x=studies,\n                    y=pp,\n                    group=likely,\n                    fill=likely))+\n  geom_bar(stat=\"identity\", width=.5)+\n  theme_classic(base_size=10)+\n  xlab(\"\")+\n  ylab(\"Percentage of Participants\")+\n  scale_y_continuous(breaks=seq(0,1,.1),labels = scales::percent)+\n  theme(legend.title = element_blank(),\n        axis.ticks.x.bottom = element_blank())\n\n\n\n\n##ggplot2 - Grammar of Graphics | aes (Aestetics)\n\n#Lets put the data into a variable \nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\")\n\nRows: 707 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): caller_id, employee_id, issue_category\ndbl  (3): wait_time, call_time, satisfaction\ndttm (1): call_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#Blank page\nggplot()\n\n\n\n#x and Y values \nggplot(data = survey_data, \n       mapping = aes(x= wait_time, \n                     y= satisfaction))\n\n\n\n#+ time \nggplot(data = survey_data, \n              aes(x= wait_time, \n                  y= satisfaction)) +\n    geom_point(color = \"black\", size=5)+ \n    geom_point(color = \"pink\", size=4)+\n    geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n##Summon CSV and put it into Survey_data\nggplot(data = survey_data, \n      aes(x= wait_time, \n          y= satisfaction, \n          color = satisfaction,\n          size = satisfaction))+\n  geom_point()\n\n\n\nmin(survey_data$wait_time)\n\n[1] 23\n\nmax(survey_data$wait_time)\n\n[1] 314\n\nlength(survey_data$wait_time)\n\n[1] 707\n\nggplot(data=survey_data, mapping = aes(x= wait_time))+\n  geom_histogram(bins=50 , color=\"green\")\n\n\n\n\nFill is the inside of the shape Dv = dependent variable dv_SEs Geom_errorbar(aes(x = , y = ))\n\nlibrary(ggpubr)\n\nCondition <-rep(c(\"No \\n Transient\",\"Transient\"), each=2)\nLocation <-rep(c(\"Outside\",\"Inside\"),2)\nMMRT <- c(304,300,290,280)\nCI_upper <-c(315,310,304,290)\nCI_lower <-c(295,290,283,270)\nplot_df <-data.frame(Condition,Location,MMRT,CI_upper,CI_lower)\nplot_df$Location <- factor(plot_df$Location, \n                         levels = c(\"Outside\",\"Inside\"))\n\nvis<-ggplot(plot_df, aes(x=Condition, y=MMRT, group=Location,\n                    fill=Location))+\n  geom_bar(stat=\"identity\",position=\"dodge\", \n           color=\"black\",\n           size=.25)+\n  theme_classic()+\n  ylab(\"Mean Median RT (ms)\")+\n  coord_cartesian(ylim=c(230,340))+\n  scale_y_continuous(breaks=seq(230,340,10))+\n  scale_fill_brewer(palette=\"Greys\", direction=-1)+\n   theme(legend.position=c(0.55,0.8),\n        legend.title=element_blank(),\n        legend.key.size = unit(.5, \"cm\"))+\n  ggtitle(\"Visual Group\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nCondition <-rep(c(\"No \\n Transient\",\"Transient\"), each=2)\nLocation <-rep(c(\"Outside\",\"Inside\"),2)\nMMRT <- c(295,290,265,250)\nCI_upper <-c(305,300,275,260)\nCI_lower <-c(285,280,255,240)\nplot_df <-data.frame(Condition,Location,MMRT,CI_upper,CI_lower)\nplot_df$Location <- factor(plot_df$Location, \n                         levels = c(\"Outside\",\"Inside\"))\n\naud<-ggplot(plot_df, aes(x=Condition, y=MMRT, group=Location,\n                    fill=Location))+\n  geom_bar(stat=\"identity\",position=\"dodge\", \n           color=\"black\",\n           size=.25)+\n  theme_classic()+\n  ylab(\"Mean Median RT (ms)\")+\n  coord_cartesian(ylim=c(230,340))+\n  scale_y_continuous(breaks=seq(230,340,10))+\n  scale_fill_brewer(palette=\"Greys\", direction=-1)+\n   theme(legend.position=\"none\")+\n  ggtitle(\"Auditory Group\")\n\nggarrange(vis,aud)\n\n\n\n\n\npeople <- rep(c(\"Family\",\"Friends\",\"Colleagues\",\"Strangers\"), each=5)\nbig_five <- rep(c(\"Emotional \\n Stability\",\"Extraversion\",\"Openness/ \\n Intellect\",\n              \"Agreeableness\",\"Consientiousness\"), 4)\nmean_difference <-c(0,.3,.8,.4,.4,\n                    c(0,.3,.8,.4,.4)-.2,\n                    c(0,.3,.8,.4,.4)-.21,\n                    c(0,.3,.8,.4,.4)-.25)\ndf <- data.frame(mean_difference,people,big_five)\n\ndf$big_five <- factor(df$big_five, \n                         levels = c(\"Emotional \\n Stability\",\"Extraversion\",\"Openness/ \\n Intellect\",\n              \"Agreeableness\",\"Consientiousness\"))\n\ndf$people <- factor(df$people, \n                         levels = c(\"Family\",\"Friends\",\"Colleagues\",\"Strangers\"))\n\nggplot(df, aes(x=big_five, y=mean_difference,\n               group=people,\n               shape=people,\n               linetype=people,\n               color=people))+\n  scale_color_brewer(palette=\"Greys\", direction=-1)+\n  geom_point()+\n  geom_line()+\n  xlab(\"\")+\n  ylab(\"Mean Difference\")+\n  coord_cartesian(ylim=c(-.8,.8))+\n  scale_y_continuous(breaks=seq(-.8,.8,.2))+\n  theme_classic()+\n  geom_hline(yintercept=0)+\n  theme(axis.line.x.bottom = element_blank(),\n        axis.ticks.x.bottom = element_blank(),\n        legend.title = element_blank())\n\n\n\n\n\nevaluation<-c((seq(1,7,.1)+runif(61,-2,2)),\n              (seq(1,7,.1)+runif(61,-2,2)))\npTarget <-c((seq(.92,.85,length.out=61)+runif(61,-.1,.1)),\n            (seq(.8,.4,length.out=61)+runif(61,-.5,.5)))\nGender <- rep(c(\"Man Communicated with ATC\",\n            \"Woman Communicated with ATC\"), each=61)\nplot_df<-data.frame(evaluation,pTarget,Gender)\nplot_df <- plot_df %>%\n              filter(evaluation>=1,\n                     evaluation<=7)\n\nggplot(plot_df, aes(x=evaluation,y=pTarget,\n                    group=Gender,\n                    color=Gender))+\n  geom_smooth(method=\"lm\")+\n  theme_classic()+\n  scale_y_continuous(breaks=seq(0,1,.1),labels = scales::percent)+\n  scale_x_continuous(breaks=seq(1,7,1))+\n  coord_cartesian(ylim=c(0,1))+\n  xlab(\"Evaluation of Person X\")+\n  ylab(\"P(Target = Pilot)\")+\n  theme(legend.position=c(0.45,0.2),\n        legend.title=element_blank(),\n        legend.key.size = unit(.5, \"cm\"))+\n  theme(legend.key = element_rect(colour = 'white', fill = 'white', size = 1, linetype='solid'))\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nA <- rexp(200)\nB <- rnorm(200,3,sd=1)\nC <- rnorm(200,3,sd=1)\nD <- rnorm(200,3,sd=1)\nDV <- c(A,B,C,D)\nstudies <- rep(c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"), each=200)\n\nplot_df <-data.frame(DV,studies)\n\nplot_df$studies <- factor(plot_df$studies, \n                         levels = c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"))\n\nlibrary(dplyr)\n\nmeans_df <- plot_df %>%\n              group_by(studies) %>%\n              summarise(M=mean(DV),\n                        CI_lower = t.test(DV)$conf.int[1],\n                        CI_upper = t.test(DV)$conf.int[2])\n\nggplot(means_df, aes(x=studies,y=M))+\n  geom_violin(data=plot_df, aes(x=studies,y=DV),fill=\"grey\")+\n  theme_classic(base_size=10)+\n  xlab(\"\")+\n  ylab(\"Evaluation of Person X\")+\n  scale_y_continuous(breaks=seq(0,7,1))+\n  coord_cartesian(ylim=c(0,7))+\n  geom_point()+\n  geom_errorbar(aes(ymin=CI_lower,ymax=CI_upper), width=.2)\n\n\n\n\n\nGender <- rep(c(\"Men Performed Surgery \\n n = 152\",\n            \"Women Performed Surgery \\n n = 142\"), each =3)\nParameter <- rep(c(\"Prior\",\n               \"Model \\n Posterior\",\n               \"Reported \\n Posterior\"), 2)\np <- c(.7, .88, .87, .29, .72, .76)\nci <- c(.05, .05, .05, .05, .05, .05)\nplot_df <- data.frame(p, ci, Gender, Parameter)\nplot_df$Parameter <- factor(plot_df$Parameter, \n                         levels = c(\"Prior\",\n               \"Model \\n Posterior\",\n               \"Reported \\n Posterior\"))\n\nggplot(plot_df, aes(x=Parameter, y=p, fill=Parameter))+\n  geom_bar(stat=\"identity\", position=\"dodge\")+\n  facet_wrap(~Gender)+\n  theme_classic(base_size=11)+\n  scale_fill_manual(values=c(\"#F8766D\", \"#7CAE00\", \"#C77CFF\"))+\n  ylab(\"P(Target = Doctor)\")+\n  scale_y_continuous(breaks=seq(0,1,.1),labels = scales::percent)+\n  coord_cartesian(ylim=c(0,1))+\n  theme(panel.grid = element_blank(),\n        panel.spacing.x = unit(0,\"line\"),\n        panel.border = element_blank(),\n        panel.background = element_blank())+\n  theme(strip.background = element_rect(colour = 'white', fill = 'white', size = 0))+\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "posts/midterm part 1/index.html",
    "href": "posts/midterm part 1/index.html",
    "title": "midterm part 1",
    "section": "",
    "text": "my_string <- \"Hello, world!\"\n\nmy_num <- 42.5\n\nmy_int <- 42L\n\nmy_logical <- TRUE\n\nmy_data_frame <- data.frame(name = c(\"John\", \"Jane\", \"Bob\"), age = c(25, 30, 35))\n\n\nmy_list <- list(name = \"John\", age = 25, favorite_foods = c(\"pizza\", \"tacos\", \"sushi\"))\n\n\nmy_string[2]\n\n[1] NA\n\nmy_num[1] <- 50"
  },
  {
    "objectID": "posts/midterm part 1/index.html#if-else",
    "href": "posts/midterm part 1/index.html#if-else",
    "title": "midterm part 1",
    "section": "IF ELSE",
    "text": "IF ELSE\n\na <- 1 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(\"A is not 1\") # this is what happens if a is not 1\n}\n\n[1] 1\n\n\n\na <- 2 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(rbinom(10,1,.5)) # this is what happens if a is not 1\n  1+1\n  print(\"hello world\")\n  rbinom(10,1,.5)\n}\n\n [1] 0 1 1 0 0 0 0 1 0 0\n[1] \"hello world\"\n\n\n [1] 0 1 1 0 0 0 1 1 1 1\n\n\n\na <- 3.5\nif(a >= 4){\n  print(\"get to go on the cyclone\")\n}\nif(a < 4){\n  print(\"sorry\")\n}\n\n[1] \"sorry\"\n\n\n\n# Make a loop do something 5 times\n# i is the iterator\n# 1:5 creates a vector with 5 numbers in it, 1, 2, 3, 4, 5\n# the loop will run 5 times, because there are five things to assign to i\nfor(i in 1:5) {\n  print(\"hello\")\n}\n\n[1] \"hello\"\n[1] \"hello\"\n[1] \"hello\"\n[1] \"hello\"\n[1] \"hello\"\n\n\n\n# show the value of i each step of the loop\nfor(i in 1:5) {\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# define the vector to loop over in advance\nx <- 1:5\nfor (i in x) {\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\nfor(i in 1:5){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\nx <- 1:5\nfor (matt in x) {\n  print(i)\n}\n\n[1] 5\n[1] 5\n[1] 5\n[1] 5\n[1] 5\n\nx <- 1:5\nfor (matt in x) {\n  print(matt)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# Reminder that i becomes the next value in the vector\n# your vector can have any order \nmy_sequence <- c(1, 5, 2, 3, 4)\nfor (i in my_sequence) {\n  print(i)\n}\n\n[1] 1\n[1] 5\n[1] 2\n[1] 3\n[1] 4\n\n\n\n# index vector does not need to be numbers\nmy_things <- c(\"A\", \"B\", \"C\", \"D\")\nfor (i in my_things) {\n  print(i)\n}\n\n[1] \"A\"\n[1] \"B\"\n[1] \"C\"\n[1] \"D\"\n\n\n\nBreaking a loop\nbreak stops a loop. Used with logical statements to define the conditions necessary to cause the break.\n\nfor(i in 1:10) {\n  if (i < 5) {\n    print(i)\n  } else{\n    break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n\n\n\n\nWhile loops\n\ni <- 1 # create an variable\nwhile (i < 6) {\n  print(i)\n  i <- i + 1 #add one eachs step of the loop\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n\nRepeat loops\nSimilar to while, but let’s do things until a condition is met.\n\ni <- 0\nrepeat {\n  i <- i + 1\n  print(i)\n  if (i == 5) {\n    break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\ni <- 0\nrepeat {\n    i <- i + 1\n    \n    if (i == 5) {\n      break\n    }\n    \n    print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4"
  },
  {
    "objectID": "posts/week 9/index.html#number-of-reviews-by-year",
    "href": "posts/week 9/index.html#number-of-reviews-by-year",
    "title": "week 9",
    "section": "Number of reviews by year",
    "text": "Number of reviews by year"
  },
  {
    "objectID": "posts/week 9/index.html#verified-users",
    "href": "posts/week 9/index.html#verified-users",
    "title": "week 9",
    "section": "Verified users",
    "text": "Verified users\n\n\n\n\n\nverified\ncounts\n\n\n\n\nFALSE\n164932\n\n\nTRUE\n332645\n\n\n\n\n\n\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\n\n\n\n##Total number of reviews assigned each rating"
  },
  {
    "objectID": "posts/week 9/index.html#by-purchase-status",
    "href": "posts/week 9/index.html#by-purchase-status",
    "title": "week 9",
    "section": "By purchase status",
    "text": "By purchase status\n\n#Get number of reviews per year\n\nrating_by_verified_counts <- review_data %>%\n  group_by(rating,verified) %>%\n  summarize(counts = n())\n\n`summarise()` has grouped output by 'rating'. You can override using the\n`.groups` argument.\n\n#ggplot(data = reviews_by_year, mapping = aes(x=year, y=counts))\n#ggplot(reviews_by_year, aes(x=year, y=counts))\n\n# plot\n\nggplot(data = rating_by_verified_counts, \n       mapping = aes(x=rating, \n                     y=counts, \n                     group = verified,\n                     fill = verified))+\n  geom_bar(stat= \"identity\", position = \"dodge\")+\n  xlab(\"\")+\n  ylab(\"\")+\n  ggtitle(\"Review Ratings\",\n          subtitle = \"By purchase status\")+\n  theme(\n    panel.background = element_rect(fill = \"lightgrey\",\n                                colour = \"lightgrey\",\n                                linewidth = 0.5, linetype = \"solid\"),\n    panel.grid.major=element_line(colour=\"black\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"lightgrey\"))"
  },
  {
    "objectID": "posts/week 9/index.html#by-purchase-status-1",
    "href": "posts/week 9/index.html#by-purchase-status-1",
    "title": "week 9",
    "section": "By purchase status",
    "text": "By purchase status\nAverage ratings for verified reviews were higher (both mean and median) than for unverified review, likely driven by the number of 5-star reviews for verified reviews.\n\n\n\n\nTable 1: Average ratings by purchase status\n\n\nVerified\nMean rating\nMedian rating\n\n\n\n\nFALSE\n3.91\n4\n\n\nTRUE\n4.37\n5"
  },
  {
    "objectID": "posts/week 9/index.html#by-year-and-purchase-status",
    "href": "posts/week 9/index.html#by-year-and-purchase-status",
    "title": "week 9",
    "section": "By year and purchase status",
    "text": "By year and purchase status\n\nyear_rating_status <- review_data %>%\n  group_by(year,verified) %>%\n  summarise(mean_rating = mean(rating),.groups = 'drop')\n  \n# plot\n\nggplot(data = year_rating_status, \n       mapping = aes(x=year, \n                     y=mean_rating, \n                     group = verified,\n                     color = verified))+\n  geom_line()+\n  geom_point()+\n  scale_x_continuous(breaks = 1999:2018)+\n  scale_color_manual(values = c('#1b9e77','#d95f02'))+\n  theme(axis.text.x = element_text(angle = 85, vjust = 1, hjust=1))+\n  xlab(\"\")+\n  ylab(\"\")+\n  ggtitle(\"Average Ratings\",\n          subtitle = \"By year and purchase status\")+\n  theme(\n    panel.background = element_rect(fill = \"lightgrey\",\n                                colour = \"lightgrey\",\n                                linewidth = 0.5, linetype = \"solid\"),\n    panel.grid.major=element_line(colour=\"black\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"lightgrey\"))"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "quartoCourseBlog",
    "section": "",
    "text": "This is a template for using quarto to create a course blog. A course blog can be used in many ways to engage with course content. For example, you could use the blog to post assignments, or to dive more deeply into course material that interests you. By the end of the course, your blog can serve as a portfolio of ways that you engaged in the material. By learning how to use quarto for your blog, you will also be learning new skills for creating and sharing reproducible documents that could be useful to you in the future.\nThe purpose of this page is to provide tips and pointers about blogging with quarto. Quarto is simple enough for creating a basic course blog. However, it is also very deep and can be used to create all sorts of documents, from website, to slide decks, and books.\n\n\nMany questions about quarto can be answered from the quarto documentation located at: https://quarto.org.\nIf you are looking for something specific and don’t know where to find it on the website, use the search tool in the top right corner.\n\n\n\n\nTo use this template you will need a Github.com account, and access to R and Rstudio.\nYou can get access by creating a Github.com account, and downloading the necessary open-source software to your machine.\nIt is also possible to use Rstudio in your web-browser, which does not require downloading any software. There are two sets of instructions, one for the downloading approach, and the other for using Rstudio cloud. Scroll to the bottom for instructions on using Rstudio cloud.\n\n\n\nIn order to use this template you will need to install some free open-source software on your computer.\n\nSign up for a free account at https://github.com. This a website for sharing open-source software, but it can also be used to serve your blog as a website for free.\nDownload Github Desktop and install it on your machine. This should install the version control software git on your system, and you can use Github Desktop to easily push your blog from your local computer so that it can be viewed on Github.com.\nDownload R and install it on your machine. R is a programming language capable of many things, and it needs to be on your machine before you can run R Studio.\nDownload R Studio Desktop and install it on your machine. R Studio is called an “IDE” or integrated development environment, that you can use to write your blog with quarto.\n\n\n\n\nOnce you have the software installed, the next step is to create a quarto blog project in R studio. The collection of files in this template is a pre-made quarto blog project that you can modify for your own purposes. You can also make one yourself in Rstudio.\nAssuming you have downloaded this template, and you have installed the above software, then you need to open quartoCourseBlog.Rproj.\n\n\n\n\nTo find out if everything is working, try rendering the blog. Go to the “Build” Tab and press “Render Website”.\n\nAfter the rendering is complete, you should be able to view your blog. It might show up in the viewer pane like this:\n\nAnd if you press the ‘window-with-an-arrow’ button, you can view the website in your default browser. Quarto websites automatically adjust for the size of the window, so it may appear differently in the viewer pane versus the browser.\n\n\n\nAll of the blog posts are located in the posts folder.\n\nTo make a new post, copy an existing post and then modify it. For example, my posts folder currently contains one post, and it is inside the my_first_post folder.\n\nI can copy the folder and make a new one with the same contents from the Rstudio gear-box menu:\n\nI made a folder for a second post called Example_assignment.\n\nThese are the two files inside the folder. The .qmd file is a plain text file where you will write the blog post. This folder can also be used to store other assets you might put in the post, such as pictures.\n\n\n\nTo write a new post, open the .qmd file, edit the text, and then re-render the website. This is what the text in the .qmd file looked like when I copied it.\n\nThe text at the top between the “---” is called YAML, and provides meta-data for your document. This is where you can change the title, date, name, and add keywords if you want.\nThe rest of the document is for the main body of the post. For example, I changed the text to read:\n\n\n\n\n\nRender the website from the build tab again to see your new post.\n\n\n\nTo share your blog online you will have to publish it on a server that can be accessed by other people on the internet. There are multiple ways to do this step, and I recommend using Github pages. You can view more in-depth instructions from quarto here https://quarto.org/docs/publishing/github-pages.html.\nHere are the steps:\n\nOpen Github Desktop\nGo to preferences and sign in to your Github.com account\n“Add” your blog project folder to Github Desktop\nThere should be an option for a commit message, write a note in there like “first commit”.\nPublish to github.com and uncheck private repository so that other people will be able to see your repository.\nYou should now be able to see your new repository in your github.com profile, which means you should be able to see a copy of your blog files in the repository.\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder.\nAccess the blog from the url generated by the github pages settings page.\n\n\n\n\nWhenever you make changes to your blog project that you want to share online follow these steps:\n\nMake changes to your blog, like writing a new post, or editing an old one.\nRender the website in R-studio. What you see here should be what you will see later on Github.com\nOpen Github Desktop and Commit your changes, by writing brief commit title, and pressing commit.\nThen, use Github Desktop to Push your changes to github.com.\nWait half a minute or so, and you should see your new content appear on the website.\n\n\n\n\nI am planning to add a video overview of these steps soon. In the meantime, these instructions may be enough to get started with R studio cloud and github.com.\n\nSign up for a free account with posit cloud here https://posit.cloud/plans/free\nSign up for a free https://github.com account.\nLog in to Github, and search for this repository https://github.com/CrumpLab/quartoCourseBlog.\n\n\nClick the green “Use this template” Button\nThis will make a copy of the template in your github account, it will show up as one of your repositories\nGive your new repository a name\n\n\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder. You should now be able to view the blog from the url given by github pages.\nLog into Posit Cloud\nCreate a New Project, choose “New Project from Git Repository”\n\n\nenter the URL to the github repository you just made\n\n\nLoad the project, and edit/modify the files (see above for examples of creating new posts etc.)\nTo send your changed files back to github.com you need to do a few steps\n\n\nFrom the Git tab: stage your changes, commit your changes, and push your changes using the green up arrow.\nYou will also need to authenticate your git credentials, and allow Rstudio cloud to update your github repository\nIn the terminal run these two lines, but replace with your name and email\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n\nWhen you “push” your changes back to Github using the green up arrow, you will be asked to enter a username and password. You can enter the username for your Github.com account, but your password won’t work. You need to set up a personal access token.\nGo to your github.com profile > settings page. Scroll down, click on “<> Developer Settings”, on the left\nClick on personal access tokens, generate a new token, give it repo access. Save the text somewhere and use it as your github password when pushing from RStudio.\n\n\nAt this point you should be able to work on your blog in Rstudio Cloud, and push your changes to have them updated on github.com, which serves your blog online.\n\n\n\n\nSee this growing list of quarto resources for much, much more:\nhttps://github.com/mcanouil/awesome-quarto"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quartoCourseBlog",
    "section": "",
    "text": "week 3\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\ncoding tips\n\n\n\n\n\n\n\n\n\n\n\n\nRachel Babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\nmidterm part 2\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nweek 6\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\nweek 4\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\nweek 5\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nweek 8\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\nweek 7\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\nmidterm part 1\n\n\n\n\n\n\n\n\n\n\n\n\nrachel babadzhanov\n\n\n\n\n\n\n  \n\n\n\n\nweek6b\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nweek 9\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nTest\n\n\n\n\n\n\n\ngoals\n\n\ngeneral\n\n\n\n\n\n\n\n\n\n\n\nOct 21, 2022\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nExample assignment\n\n\n\n\n\n\n\ngoals\n\n\ngeneral\n\n\n\n\n\n\n\n\n\n\n\nOct 21, 2022\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nMy First post\n\n\n\n\n\n\n\ngoals\n\n\ngeneral\n\n\n\n\n\n\n\n\n\n\n\nOct 21, 2022\n\n\nMatt Crump\n\n\n\n\n\n\nNo matching items"
  }
]